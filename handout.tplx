((*- extends 'article.tplx' -*))

((* block title *))
((*- if "title" in nb.metadata *))
 \title{((( nb.metadata.get("title", "") | ascii_only | escape_latex )))}
((*- else *))
 \title{((( resources.metadata.name | ascii_only | escape_latex )))}
((*- endif -*))
((* endblock title *))

((* block commands *))
\usepackage{placeins}

\usepackage{fancyhdr}
\usepackage{lastpage}

\pagestyle{fancy}
\renewcommand{\headrulewidth}{0pt}%
\fancyhf{}
\rfoot{\thepage\ of\ \pageref{LastPage}}

\fancypagestyle{plain}{%
\renewcommand{\headrulewidth}{0pt}%
\fancyhf{}
\rfoot{\thepage\ of\ \pageref{LastPage}}
}

% Prevent overflowing lines due to hard-to-break entities
\sloppy 
% Setup hyperref package
\hypersetup{
  breaklinks=true,  % so long urls are correctly broken across lines
  colorlinks=true,
  urlcolor=urlcolor,
  linkcolor=linkcolor,
  citecolor=citecolor,
  }
% Large right margin for notes
((* block margins *))
\geometry{verbose,tmargin=1in,bmargin=1in,lmargin=1in,rmargin=3in}
((* endblock margins *))
((* endblock commands *))

%===============================================================================
% Input
%===============================================================================

((* block input scoped *))
   ((( custom_add_prompt(cell.source | wrap_text(80) | highlight_code(strip_verbatim=True), cell, 'In ', 'incolor') )))
((* endblock input *))

%===============================================================================
% Output
%===============================================================================

% Display stream ouput with coloring
((* block stream *))
    \begin{Verbatim}[commandchars=\\\{\},fontsize=\footnotesize]
((( output.text | wrap_text(80) | escape_latex | ansi2latex )))
    \end{Verbatim}
((* endblock stream *))

%==============================================================================
% Define macro custom_add_prompt() (derived from add_prompt() macro in style_ipython.tplx)
%==============================================================================

((* macro custom_add_prompt(text, cell, prompt, prompt_color) -*))
    ((*- if cell.execution_count is defined -*))
    ((*- set execution_count = "" ~ (cell.execution_count | replace(None, " ")) -*))
    ((*- else -*))
    ((*- set execution_count = " " -*))
    ((*- endif -*))
    ((*- set indention =  " " * (execution_count | length + 7) -*))
%\begin{Verbatim}[commandchars=\\\{\},fontsize=\scriptsize]
\begin{Verbatim}[commandchars=\\\{\},fontsize=\footnotesize]
((( text | add_prompts(first='{\color{' ~ prompt_color ~ '}' ~ prompt ~ '[{\\color{' ~ prompt_color ~ '}' ~ execution_count ~ '}]:} ', cont=indention) )))
\end{Verbatim}
((*- endmacro *))
